image: ruby:2.7

stages:
  - preview
  - deploy
  - notify

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - vendor/ruby

before_script:
  - bundle install --without nanoc -j $(nproc) --path vendor/ruby
  - bundle exec nanoc
  - bundle exec nanoc check --deploy

preview:
  stage: preview
  variables:
    NETLIFY_SITE_ID: $NETLIFY_SITE_ID
    NETLIFY_AUTH_TOKEN: $NETLIFY_AUTH_TOKEN
    GITLAB_API_TOKEN: $GITLAB_API_TOKEN
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - vendor/ruby
      - .npm/
  script:
    - curl -fsSL https://deb.nodesource.com/setup_17.x | bash -
    - apt-get install -y nodejs curl jq
    - npm ci --cache .npm --prefer-offline
    - npx netlify deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir output | tee netlify_output.txt
    - export DRAFT_URL=$(cat netlify_output.txt | grep 'Draft.*https' | sed -e 's/\x1b\[[0-9;]*m//g' | awk -F " " '{print $NF}')
      #Delete previous netlifybot MR comments
    - 'curl
        --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN"
        "https://crypt.cybrilla.io/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes" > mr_notes.json'
    - export NOTE_ID=$(jq -r '.[] | "\(.id); \(.body)"' mr_notes.json | grep 'Deploy Preview ready' | cut -d ';' -f 1)
    - echo $NOTE_ID
    - 'for NOTE in $NOTE_ID; do curl --request DELETE
        --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN"
        "https://crypt.cybrilla.io/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID/notes/$NOTE"; done'
      #Edit MR description with a link to latest preview
    - 'curl
        --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN"
        "https://crypt.cybrilla.io/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID" > mr.json'
    - export DESCRIPTION=$(jq -r '.description' mr.json)
    - 'if [[ $DESCRIPTION != *"Browse the Preview"* ]];
      then
        export DESCRIPTION=$(echo "$DESCRIPTION 

                                    
                                  ðŸ˜Ž **Browse the Preview: $DRAFT_URL**");
      else
        export DESCRIPTION=$(echo $DESCRIPTION | sed "s~\*\*Browse the Preview: https://.*\*\*~\*\*Browse the Preview: $DRAFT_URL\*\*~g");
      fi'
    - 'curl --request PUT
        --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN"
        --data "description=$DESCRIPTION"
        "https://crypt.cybrilla.io/api/v4/projects/$CI_PROJECT_ID/merge_requests/$CI_MERGE_REQUEST_IID"'
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
  tags:
    - product-docs

deploy:
  stage: deploy
  variables:
    AWS_DEFAULT_REGION: $PROD_AWS_DEFAULT_REGION
    AWS_SECRET_ACCESS_KEY: $PROD_AWS_SECRET_ACCESS_KEY
    AWS_ACCESS_KEY_ID: $PROD_AWS_ACCESS_KEY_ID
  script:
    - apt install unzip
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    - echo "$AWS_DEFAULT_REGION"
    - aws s3 sync --delete output s3://prod-product-docs
  only:
    - master
  tags:
    - product-docs

notify:
  stage: notify
  variables:
    MATTERMOST_WEBHOOK: $MATTERMOST_WEBHOOK
  script:
    - export MERGE_REQUEST_ID=$(echo $CI_COMMIT_MESSAGE | sed -n 's/.*docs!//p' | sed 's/ .*//g')
    - export DESCRIPTION=$(echo $CI_COMMIT_MESSAGE | sed -n "s/.*into 'master' //p" | sed -n "s/ See merge request.*//p")
    - export AUTHOR=$(echo $CI_COMMIT_MESSAGE | sed -n 's/.*by:\ //p')
    - if [ -z "$AUTHOR" ]; then export AUTHOR=$CI_COMMIT_AUTHOR; fi
    - 'curl -i -X POST -H "Content-Type: application/json" -d "{\"text\":\"[Merge Request $MERGE_REQUEST_ID: $DESCRIPTION](https://crypt.cybrilla.io/fintechprimitives/docs/-/merge_requests/$MERGE_REQUEST_ID). Created by $AUTHOR has been published by $CI_COMMIT_AUTHOR.\"}" $MATTERMOST_WEBHOOK'
  rules:
    - if: '$CI_COMMIT_MESSAGE =~ /See merge request/ && $CI_COMMIT_BRANCH == "master"'
  tags:
    - notify
